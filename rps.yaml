env:
  FLUTTER_VERSION: ${FLUTTER_VERSION:-stable}
  ORG: ${ORG:-com.yerindeteknoloji}
  DESCRIPTION: ${DESCRIPTION:-"Bootstrap Proje AdÄ±mlarÄ±"}
  ANDROID_LANG: ${ANDROID_LANG:-kotlin}
  IOS_LANG: ${IOS_LANG:-swift}

scripts:
  # uzun otomasyon komutlarÄ±
  bootstrap:
    description: "Projeyi baÅŸlat + tÃ¼m kurulumlarÄ± sÄ±rayla yap"
    run:
      - rps run pin_flutter
      - rps run add_dependencies
      - rps run write_files
      - rps run create_structure
      - rps run gen_flutter
      - echo "âœ… Bootstrap tamamlandÄ±"

  pin_flutter:
    description: "Sidekick ile Flutter sÃ¼rÃ¼mÃ¼nÃ¼ sabitle (fallback: fvm)"
    run:
      - echo "ðŸ“Œ Flutter ${FLUTTER_VERSION} sabitleniyor (Sidekick/FVM)"
      - dart pub global activate sidekick || true
      - sidekick use ${FLUTTER_VERSION} || true
      - dart pub global activate fvm || true
      - fvm use ${FLUTTER_VERSION} --force || true

  add_dependencies:
    description: "Dependencies ve dev_dependencies ekle"
    run:
      - echo "ðŸ“¦ Paketler yÃ¼kleniyor..."
      - flutter pub add get_it
      - flutter pub add json_annotation
      - flutter pub add equatable
      - flutter pub add kartal
      - flutter pub add responsive_framework
      - flutter pub add envied
      - flutter pub add logger
      - flutter pub add firebase_core
      - flutter pub add cloud_firestore
      - flutter pub add firebase_ui_auth
      - flutter pub add firebase_auth
      - flutter pub add firebase_storage
      - flutter pub add --dev build_runner json_serializable
      - flutter pub add --dev envied_generator
      - flutter pub add --dev flutter_lints very_good_analysis flutter_gen_runner
      - flutter pub get
      - echo "âœ… Paketler eklendi."

  write_files:
    description: "KonfigÃ¼rasyon ve Ã¶rnek dosyalarÄ± oluÅŸtur"
    run:
      - |
        cat > analysis_options.yaml <<'EOF'
        include: package:very_good_analysis/analysis_options.yaml
        linter:
          rules:
            prefer_final_locals: true
            prefer_const_constructors: true
            avoid_redundant_argument_values: true
        EOF

      - |
        cat > build.yaml <<'EOF'
        targets:
          $default:
            builders:
              json_serializable:
                generate_for:
                  - lib/models/**_model.dart
        EOF

      - |
        cat > flutter_gen.yaml <<'EOF'
        integrations:
          flutter_svg: true
        line_length: 100
        outputs:
          class_name: Assets
          package_parameter_enabled: false
        EOF

      - |
        cat > .env <<'EOF'
        API_BASE_URL=
        API_KEY=
        SENTRY_DSN=
        CRASHLYTICS_ENABLED=true
        EOF

      - |
        cat > .env.example <<'EOF'
        API_BASE_URL=https://api.example.com
        API_KEY=replace_me
        SENTRY_DSN=
        CRASHLYTICS_ENABLED=true
        EOF

      - |
        echo "" >> .gitignore
        echo "# Env files" >> .gitignore
        echo ".env" >> .gitignore
        echo ".env.*" >> .gitignore

  create_structure:
    description: "KlasÃ¶r yapÄ±sÄ±nÄ± oluÅŸtur"
    run:
      - mkdir -p lib/{features,models,constants,enums,service_locator,provider,view_model,utils,widgets}
      - mkdir -p assets/{images,icons,colors,fonts}
      - mkdir -p gen

      - |
        cat > lib/service_locator/service_locator.dart <<'EOF'
        import 'package:get_it/get_it.dart';
        final sl = GetIt.instance;
        Future<void> setupServiceLocator() async {}
        EOF

      - |
        cat > lib/main.dart <<'EOF'
        import 'package:flutter/material.dart';
        import 'package:responsive_framework/responsive_framework.dart';
        import 'service_locator/service_locator.dart';
        Future<void> main() async {
          WidgetsFlutterBinding.ensureInitialized();
          await setupServiceLocator();
          runApp(const MyApp());
        }
        class MyApp extends StatelessWidget {
          const MyApp({super.key});
          @override
          Widget build(BuildContext context) {
            return MaterialApp(
              builder: (context, child) => ResponsiveBreakpoints.builder(
                child: child!,
                breakpoints: const [
                  Breakpoint(start: 0, end: 450, name: MOBILE),
                  Breakpoint(start: 451, end: 800, name: TABLET),
                  Breakpoint(start: 801, end: 1200, name: DESKTOP),
                  Breakpoint(start: 1201, end: double.infinity, name: '4K'),
                ],
              ),
              home: const Scaffold(
                body: Center(child: Text('Bootstrap OK')),
              ),
            );
          }
        }
        EOF

      - |
        cat > lib/utils/env.dart <<'EOF'
        import 'package:envied/envied.dart';
        part 'env.g.dart';
        @Envied(path: '.env', obfuscate: true)
        abstract class Env {
          @EnviedField(varName: 'API_BASE_URL')
          static const String apiBaseUrl = _Env.apiBaseUrl;
          @EnviedField(varName: 'API_KEY')
          static const String apiKey = _Env.apiKey;
          @EnviedField(varName: 'SENTRY_DSN', defaultValue: '')
          static const String sentryDsn = _Env.sentryDsn;
          @EnviedField(varName: 'CRASHLYTICS_ENABLED', defaultValue: 'true')
          static const String crashlyticsEnabled = _Env.crashlyticsEnabled;
        }
        EOF

  gen_flutter:
    description: "build_runner + flutter_gen Ã¼retimi"
    run:
      - flutter pub get
      - flutter pub run build_runner build --delete-conflicting-outputs || true
      - flutter pub run flutter_gen_runner build || true

  # kÄ±sa terminal komutlarÄ±
  clean:
    description: "Flutter clean"
    run:
      - flutter clean

  pub_get:
    description: "Flutter pub get"
    run:
      - flutter pub get

  run_app:
    description: "Flutter run"
    run:
      - flutter run

  reset:
    description: "Clean + pub get"
    run:
      - flutter clean && flutter pub get

  build_all:
    description: "Full build with code generation"
    run:
      - flutter clean && flutter pub get && flutter pub run build_runner build --delete-conflicting-outputs

  build_apk:
    description: "Build Android APK"
    run:
      - flutter build apk

  install_apk:
    description: "Install debug APK to connected device"
    run:
      - adb install -r build/app/outputs/flutter-apk/app-debug.apk